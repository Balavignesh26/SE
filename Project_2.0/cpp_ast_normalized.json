{
  "print_statement": {
    "flattened_ast": [
      "TRANSLATION_UNIT",
      "FUNCTION_DECL",
      "COMPOUND_STMT",
      "RETURN_STMT",
      "INTEGER_LITERAL"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      6,
      0
    ]
  },
  "variable_assignment": {
    "flattened_ast": [
      "TRANSLATION_UNIT",
      "FUNCTION_DECL",
      "COMPOUND_STMT",
      "DECL_STMT",
      "VAR_DECL",
      "INTEGER_LITERAL",
      "DECL_STMT",
      "VAR_DECL",
      "BINARY_OPERATOR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "INTEGER_LITERAL",
      "RETURN_STMT",
      "INTEGER_LITERAL"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      16,
      0,
      0,
      16,
      7,
      0,
      5,
      0,
      6,
      0
    ]
  },
  "function_with_return": {
    "flattened_ast": [
      "TRANSLATION_UNIT",
      "FUNCTION_DECL",
      "PARM_DECL",
      "PARM_DECL",
      "COMPOUND_STMT",
      "RETURN_STMT",
      "BINARY_OPERATOR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "FUNCTION_DECL",
      "COMPOUND_STMT",
      "RETURN_STMT",
      "CALL_EXPR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "INTEGER_LITERAL",
      "INTEGER_LITERAL"
    ],
    "tokenized_ast": [
      1,
      2,
      0,
      0,
      3,
      6,
      7,
      0,
      5,
      0,
      5,
      2,
      3,
      6,
      4,
      0,
      5,
      0,
      0
    ]
  },
  "if_else_statement": {
    "flattened_ast": [
      "TRANSLATION_UNIT",
      "FUNCTION_DECL",
      "COMPOUND_STMT",
      "DECL_STMT",
      "VAR_DECL",
      "INTEGER_LITERAL",
      "IF_STMT",
      "BINARY_OPERATOR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "INTEGER_LITERAL",
      "COMPOUND_STMT",
      "RETURN_STMT",
      "INTEGER_LITERAL",
      "COMPOUND_STMT",
      "RETURN_STMT",
      "INTEGER_LITERAL"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      16,
      0,
      8,
      7,
      0,
      5,
      0,
      3,
      6,
      0,
      3,
      6,
      0
    ]
  },
  "for_loop": {
    "flattened_ast": [
      "TRANSLATION_UNIT",
      "FUNCTION_DECL",
      "COMPOUND_STMT",
      "FOR_STMT",
      "DECL_STMT",
      "VAR_DECL",
      "INTEGER_LITERAL",
      "BINARY_OPERATOR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "INTEGER_LITERAL",
      "UNARY_OPERATOR",
      "DECL_REF_EXPR",
      "COMPOUND_STMT",
      "RETURN_STMT",
      "INTEGER_LITERAL"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      9,
      0,
      16,
      0,
      7,
      0,
      5,
      0,
      17,
      5,
      3,
      6,
      0
    ]
  },
  "while_loop": {
    "flattened_ast": [
      "TRANSLATION_UNIT",
      "FUNCTION_DECL",
      "COMPOUND_STMT",
      "DECL_STMT",
      "VAR_DECL",
      "INTEGER_LITERAL",
      "WHILE_STMT",
      "BINARY_OPERATOR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "INTEGER_LITERAL",
      "COMPOUND_STMT",
      "UNARY_OPERATOR",
      "DECL_REF_EXPR",
      "RETURN_STMT",
      "INTEGER_LITERAL"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      16,
      0,
      10,
      7,
      0,
      5,
      0,
      3,
      17,
      5,
      6,
      0
    ]
  },
  "break_continue": {
    "flattened_ast": [
      "TRANSLATION_UNIT",
      "FUNCTION_DECL",
      "COMPOUND_STMT",
      "FOR_STMT",
      "DECL_STMT",
      "VAR_DECL",
      "INTEGER_LITERAL",
      "BINARY_OPERATOR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "INTEGER_LITERAL",
      "UNARY_OPERATOR",
      "DECL_REF_EXPR",
      "COMPOUND_STMT",
      "IF_STMT",
      "BINARY_OPERATOR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "INTEGER_LITERAL",
      "BREAK_STMT",
      "IF_STMT",
      "BINARY_OPERATOR",
      "BINARY_OPERATOR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "INTEGER_LITERAL",
      "INTEGER_LITERAL",
      "CONTINUE_STMT",
      "RETURN_STMT",
      "INTEGER_LITERAL"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      9,
      0,
      16,
      0,
      7,
      0,
      5,
      0,
      17,
      5,
      3,
      8,
      7,
      0,
      5,
      0,
      11,
      8,
      7,
      7,
      0,
      5,
      0,
      0,
      12,
      6,
      0
    ]
  },
  "switch_case": {
    "flattened_ast": [
      "TRANSLATION_UNIT",
      "FUNCTION_DECL",
      "COMPOUND_STMT",
      "DECL_STMT",
      "VAR_DECL",
      "INTEGER_LITERAL",
      "SWITCH_STMT",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "COMPOUND_STMT",
      "CASE_STMT",
      "INTEGER_LITERAL",
      "RETURN_STMT",
      "INTEGER_LITERAL",
      "CASE_STMT",
      "INTEGER_LITERAL",
      "RETURN_STMT",
      "INTEGER_LITERAL",
      "DEFAULT_STMT",
      "RETURN_STMT",
      "INTEGER_LITERAL"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      16,
      0,
      22,
      0,
      5,
      3,
      13,
      0,
      6,
      0,
      13,
      0,
      6,
      0,
      14,
      6,
      0
    ]
  },
  "lambda_expression": {
    "flattened_ast": [
      "TRANSLATION_UNIT",
      "VAR_DECL",
      "UNEXPOSED_EXPR",
      "CALL_EXPR",
      "UNEXPOSED_EXPR",
      "LAMBDA_EXPR",
      "PARM_DECL",
      "PARM_DECL",
      "COMPOUND_STMT",
      "RETURN_STMT",
      "BINARY_OPERATOR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "FUNCTION_DECL",
      "COMPOUND_STMT",
      "RETURN_STMT",
      "CALL_EXPR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "UNEXPOSED_EXPR",
      "DECL_REF_EXPR",
      "INTEGER_LITERAL",
      "INTEGER_LITERAL"
    ],
    "tokenized_ast": [
      1,
      16,
      0,
      4,
      0,
      21,
      0,
      0,
      3,
      6,
      7,
      0,
      5,
      0,
      5,
      2,
      3,
      6,
      4,
      0,
      5,
      0,
      5,
      0,
      0
    ]
  }
}