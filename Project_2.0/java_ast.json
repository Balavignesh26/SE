{
  "print_statement": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "StatementExpression",
      "MethodInvocation",
      "Literal"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      0,
      15
    ]
  },
  "variable_assignment": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "LocalVariableDeclaration",
      "BasicType",
      "VariableDeclarator",
      "Literal",
      "LocalVariableDeclaration",
      "BasicType",
      "VariableDeclarator",
      "BinaryOperation",
      "MemberReference",
      "Literal"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      0,
      16,
      15,
      0,
      0,
      16,
      7,
      0,
      15
    ]
  },
  "function_with_return": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "BasicType",
      "FormalParameter",
      "BasicType",
      "FormalParameter",
      "BasicType",
      "ReturnStatement",
      "BinaryOperation",
      "MemberReference",
      "MemberReference"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      0,
      0,
      0,
      0,
      13,
      7,
      0,
      0
    ]
  },
  "if_else_statement": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "LocalVariableDeclaration",
      "BasicType",
      "VariableDeclarator",
      "Literal",
      "IfStatement",
      "BinaryOperation",
      "MemberReference",
      "Literal",
      "BlockStatement",
      "StatementExpression",
      "MethodInvocation",
      "Literal",
      "BlockStatement",
      "StatementExpression",
      "MethodInvocation",
      "Literal"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      0,
      16,
      15,
      8,
      7,
      0,
      15,
      4,
      0,
      0,
      15,
      4,
      0,
      0,
      15
    ]
  },
  "for_loop": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "ForStatement",
      "ForControl",
      "VariableDeclaration",
      "BasicType",
      "VariableDeclarator",
      "Literal",
      "BinaryOperation",
      "MemberReference",
      "Literal",
      "MemberReference",
      "BlockStatement",
      "StatementExpression",
      "MethodInvocation",
      "MemberReference"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      9,
      0,
      0,
      0,
      16,
      15,
      7,
      0,
      15,
      0,
      4,
      0,
      0,
      0
    ]
  },
  "while_loop": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "LocalVariableDeclaration",
      "BasicType",
      "VariableDeclarator",
      "Literal",
      "WhileStatement",
      "BinaryOperation",
      "MemberReference",
      "Literal",
      "BlockStatement",
      "StatementExpression",
      "MethodInvocation",
      "MemberReference",
      "StatementExpression",
      "MemberReference"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      0,
      16,
      15,
      10,
      7,
      0,
      15,
      4,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "break_continue": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "ForStatement",
      "ForControl",
      "VariableDeclaration",
      "BasicType",
      "VariableDeclarator",
      "Literal",
      "BinaryOperation",
      "MemberReference",
      "Literal",
      "MemberReference",
      "BlockStatement",
      "IfStatement",
      "BinaryOperation",
      "MemberReference",
      "Literal",
      "BreakStatement",
      "IfStatement",
      "BinaryOperation",
      "BinaryOperation",
      "MemberReference",
      "Literal",
      "Literal",
      "ContinueStatement",
      "StatementExpression",
      "MethodInvocation",
      "MemberReference"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      9,
      0,
      0,
      0,
      16,
      15,
      7,
      0,
      15,
      0,
      4,
      8,
      7,
      0,
      15,
      11,
      8,
      7,
      7,
      0,
      15,
      15,
      12,
      0,
      0,
      0
    ]
  },
  "class_definition": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "FieldDeclaration",
      "ReferenceType",
      "VariableDeclarator",
      "ConstructorDeclaration",
      "FormalParameter",
      "ReferenceType",
      "StatementExpression",
      "Assignment",
      "This",
      "MemberReference",
      "MemberReference"
    ],
    "tokenized_ast": [
      1,
      2,
      0,
      0,
      16,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "try_catch": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "TryStatement",
      "LocalVariableDeclaration",
      "BasicType",
      "VariableDeclarator",
      "BinaryOperation",
      "Literal",
      "Literal",
      "CatchClause",
      "CatchClauseParameter",
      "StatementExpression",
      "MethodInvocation",
      "Literal"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      17,
      0,
      0,
      16,
      7,
      15,
      15,
      18,
      0,
      0,
      0,
      15
    ]
  },
  "switch_case": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "LocalVariableDeclaration",
      "BasicType",
      "VariableDeclarator",
      "Literal",
      "SwitchStatement",
      "MemberReference",
      "SwitchStatementCase",
      "Literal",
      "StatementExpression",
      "MethodInvocation",
      "Literal",
      "BreakStatement",
      "SwitchStatementCase",
      "Literal",
      "StatementExpression",
      "MethodInvocation",
      "Literal",
      "BreakStatement",
      "SwitchStatementCase",
      "StatementExpression",
      "MethodInvocation",
      "Literal"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      0,
      16,
      15,
      22,
      0,
      0,
      15,
      0,
      0,
      15,
      11,
      0,
      15,
      0,
      0,
      15,
      11,
      0,
      0,
      0,
      15
    ]
  },
  "interface_usage": {
    "flattened_ast": [
      "CompilationUnit",
      "InterfaceDeclaration",
      "MethodDeclaration",
      "ClassDeclaration",
      "MethodDeclaration",
      "StatementExpression",
      "MethodInvocation",
      "Literal",
      "ReferenceType"
    ],
    "tokenized_ast": [
      1,
      23,
      3,
      2,
      3,
      0,
      0,
      15,
      0
    ]
  },
  "abstract_class": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "ClassDeclaration",
      "MethodDeclaration",
      "StatementExpression",
      "MethodInvocation",
      "Literal",
      "ReferenceType"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      2,
      3,
      0,
      0,
      15,
      0
    ]
  },
  "thread_usage": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "StatementExpression",
      "MethodInvocation",
      "Literal",
      "ReferenceType"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      0,
      15,
      0
    ]
  },
  "file_handling": {
    "flattened_ast": [
      "CompilationUnit",
      "Import",
      "ClassDeclaration",
      "MethodDeclaration",
      "TryStatement",
      "LocalVariableDeclaration",
      "ReferenceType",
      "VariableDeclarator",
      "ClassCreator",
      "ReferenceType",
      "Literal",
      "StatementExpression",
      "MethodInvocation",
      "Literal",
      "StatementExpression",
      "MethodInvocation",
      "CatchClause",
      "CatchClauseParameter",
      "StatementExpression",
      "MethodInvocation"
    ],
    "tokenized_ast": [
      1,
      21,
      2,
      3,
      17,
      0,
      0,
      16,
      14,
      0,
      15,
      0,
      0,
      15,
      0,
      0,
      18,
      0,
      0,
      0
    ]
  },
  "static_method": {
    "flattened_ast": [
      "CompilationUnit",
      "ClassDeclaration",
      "MethodDeclaration",
      "StatementExpression",
      "MethodInvocation",
      "Literal"
    ],
    "tokenized_ast": [
      1,
      2,
      3,
      0,
      0,
      15
    ]
  }
}